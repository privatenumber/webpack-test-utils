import f from"webpack";import{createFsRequire as p}from"fs-require";import c from"path";import{createFsFromVolume as g,Volume as w}from"memfs";import h from"fs";import{Union as v}from"unionfs";function y(){const o={};return o.promise=new Promise((e,i)=>{o.resolve=e,o.reject=i}),o}const a=o=>{const e=g(w.fromJSON(o));return Object.assign(e,{join:c.join}),e};class j{constructor(e){this.options=e}apply(e){Object.assign(e,this.options)}}const b=()=>({mode:"production",target:"node",context:"/",entry:{index:"/src/index.js"},resolve:{modules:[c.resolve("node_modules"),"node_modules"]},resolveLoader:{modules:[c.resolve("node_modules"),"node_modules"]},module:{rules:[]},optimization:{minimize:!1},output:{filename:"[name].js",path:"/dist",libraryTarget:"commonjs2",libraryExport:"default"},plugins:[]});function d(o,e,i=f){const r=b();return e&&e(r),Array.isArray(r.plugins)||(r.plugins=[]),r.plugins.unshift(new j({inputFileSystem:new v().use(h).use(o),outputFileSystem:o})),i(r)}const F=(o,e,i)=>{const r=a(o);return new Promise((m,s)=>{d(r,e,i).run((l,t)=>{if(l){s(l);return}m({stats:t,fs:r,require:p(r)})})})},x=(o,e,i)=>{const r=a(o),m=d(r,e,i);let s,n=null;return{fs:r,require:p(r),async build(l=(t=>(t=(i!=null?i:f).version)==null?void 0:t.startsWith("4."))()){if(n)throw new Error("Build in progress");return n=y(),s?l&&s.invalidate():s=m.watch({},async(t,u)=>{if(t){n==null||n.reject(t),n=null;return}n==null||n.resolve(u),n=null}),await n.promise},close:()=>new Promise((l,t)=>{if(!s){l();return}s.close(u=>{if(u)return t(u);l()})})}};export{F as build,x as watch};
