import c from"webpack";import{createFsRequire as f}from"fs-require";import m from"path";import{createFsFromVolume as g,Volume as w}from"memfs";import h from"fs";import{Union as v}from"unionfs";function y(){const o={};return o.promise=new Promise((e,i)=>{o.resolve=e,o.reject=i}),o}const p=o=>{const e=g(w.fromJSON(o));return Object.assign(e,{join:m.join}),e};class j{constructor(e){this.options=e}apply(e){Object.assign(e,this.options)}}const b=()=>({mode:"production",target:"node",context:"/",entry:{index:"/src/index.js"},resolve:{modules:[m.resolve("node_modules"),"node_modules"]},resolveLoader:{modules:[m.resolve("node_modules"),"node_modules"]},module:{rules:[]},optimization:{minimize:!1},output:{filename:"[name].js",path:"/dist",libraryTarget:"commonjs2",libraryExport:"default"},plugins:[]});function a(o,e,i=c){const r=b();return e&&e(r),Array.isArray(r.plugins)||(r.plugins=[]),r.plugins.unshift(new j({inputFileSystem:new v().use(h).use(o),outputFileSystem:o})),i(r)}const F=(o,e,i)=>{const r=p(o);return new Promise((u,t)=>{a(r,e,i).run((s,l)=>{if(s){t(s);return}u({stats:l,fs:r,require:f(r)})})})},x=(o,e,i)=>{const r=p(o),u=a(r,e,i);let t,n=null;return{fs:r,require:f(r),async build(s=(l=>(l=(i!=null?i:c).version)==null?void 0:l.startsWith("4."))()){if(n)throw new Error("Build in progress");return n=y(),t?s&&t.invalidate():t=u.watch({},async(l,d)=>{if(l){n==null||n.reject(l),n=null;return}n==null||n.resolve(d),n=null}),await n.promise},close:()=>new Promise(s=>{t?t.close(s):s()})}};export{F as build,x as watch};
